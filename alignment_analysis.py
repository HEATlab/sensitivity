
from sympy import symbols, Eq, solve, sqrt
import numpy as np

from scipy.stats import beta

import numpy as np
import seaborn as sns
import matplotlib.pylab as plt
import pandas as pd
import seaborn as sns

# def loadSTNfromJSONobj(jsonSTN, using_PSTN=True):
#     stn = STN()

#     # Add the root vertex and put it in the T_x set
#     stn.addVertex(0)

#     # Add the vertices
#     for v in jsonSTN['nodes']:
#         stn.addVertex(v['node_id'])

#     # Add the edges
#     for e in jsonSTN['constraints']:
#         if using_PSTN and 'distribution' in e:
#             stn.addEdge(e['first_node'], e['second_node'],
#                         float(e['min_duration']), float(e['max_duration']),
#                         e['distribution']['type'], e['distribution']['name'])
#         elif 'type' in e:
#             if e['type'] == 'stcu':
#                 dist = "U_"+str(e['min_duration']) + "_" + str(e['max_duration'])
#                 stn.addEdge(e['first_node'], e['second_node'],
#                     float(e['min_duration']), float(e['max_duration']),
#                     e['type'], dist)
#             else:
#                 stn.addEdge(e['first_node'], e['second_node'],
#                             float(e['min_duration']), float(e['max_duration']),
#                             e['type'])
#         else:
#             stn.addEdge(e['first_node'], e['second_node'],
#                         float(e['min_duration']), float(e['max_duration']))

#     return stn
 # 10 rows 12 cols 
uniform_data = np.random.rand(10, 12)
print(uniform_data)
# ax = sns.heatmap(uniform_data, linewidth=0.5)
# plt.show()


# def get_dispatch_rate():
#     total_dispatch_rate = 0
#     total_num = 0 
#     with open('16369.txt') as f:
#         datafile = f.readlines()
#     found = False  # This isn't really necessary
#     for line in datafile:
#         if "dispatch rate for" in line:
#             print(line)
#             # found = True # Not necessary
#             total_dispatch_rate += float(line.split()[-1])
#             total_num += 1
#     print(total_dispatch_rate,total_num)
#     return total_dispatch_rate/ total_num # Because you finished the search without finding

# stn = loadSTNfromJSONfile(data)
# contingentEdges = stn.contingentEdges
# temp = []
# for e in contingentEdges.values():
#     temp.append([(e.mu)/(e.Cij + e.Cji) + e.Cji/(e.Cij + e.Cji), sqrt((e.sigma)*(e.sigma)/(e.Cij + e.Cji) /(e.Cij + e.Cji) )])
# print(temp)

# find the highest alpha and beta 
def normal_beta(mu,sigma):
    alpha, beta = symbols('alpha beta')
    eq1 = Eq(alpha /(alpha + beta) - mu)
    eq2 = Eq(sqrt((alpha * beta)/((alpha + beta)*(alpha + beta)*(alpha + beta + 1))) - sigma)
    sol_dict = solve((eq1,eq2), (alpha, beta))
    # need to figure out the type of sol_dict
    return float(tuple(sol_dict[0])[0]), float(tuple(sol_dict[0])[1])

max_alpha, max_beta = normal_beta(0.5,0.1)

print(max_alpha, max_beta)

# create continuous scales for alpha and beta 
def alpha_beta_set(max_alpha, max_beta, step_size=0.5):
    alpha_beta = []
    for alpha in range(1, int(max_alpha + 1) * 10, int(step_size * 10)):
        for beta in range(1, int(max_beta + 1) * 10, int(step_size * 10)):
            alpha_beta.append((alpha/10, beta/10))
    return alpha_beta
alpha_beta_list = alpha_beta_set(max_alpha,max_beta, step_size = 1)

x_axis = []
y_axis = []

for a, b in alpha_beta_list:
    if a not in x_axis:
        x_axis.append(a)
    if b not in y_axis:
        y_axis.append(b)
print(x_axis)
print(y_axis)

print(beta.ppf(0.05,12,12,10,20), "here")
print()
print(beta.rvs(12, 12, loc = 10, scale = 20, size=1), "this one")

a_list = [(1,2), (3,4)]
for a,b in a_list: 
    print(((a,b), "hah"))

mrx_normal = [((0.1, 0.1), 0.85), ((0.1, 2.1), 0.71), ((0.1, 4.1), 0.67), ((0.1, 6.1), 0.665), ((0.1, 8.1), 0.76), ((0.1, 10.1), 0.67), ((0.1, 12.1), 0.7), ((2.1, 0.1), 0.745), ((2.1, 2.1), 0.835), ((2.1, 4.1), 0.695), ((2.1, 6.1), 0.785), ((2.1, 8.1), 0.695), ((2.1, 10.1), 0.72), ((2.1, 12.1), 0.735), ((4.1, 0.1), 0.76), ((4.1, 2.1), 0.71), ((4.1, 4.1), 0.845), ((4.1, 6.1), 0.71), ((4.1, 8.1), 0.685), ((4.1, 10.1), 0.745), ((4.1, 12.1), 0.785), ((6.1, 0.1), 0.785), ((6.1, 2.1), 0.78), ((6.1, 4.1), 0.785), ((6.1, 6.1), 0.845), ((6.1, 8.1), 0.835), ((6.1, 10.1), 0.425), ((6.1, 12.1), 0.725), ((8.1, 0.1), 0.72), ((8.1, 2.1), 0.765), ((8.1, 4.1), 0.73), ((8.1, 6.1), 0.795), ((8.1, 8.1), 0.845), ((8.1, 10.1), 0.875), ((8.1, 12.1), 0.725), ((10.1, 0.1), 0.76), ((10.1, 2.1), 0.76), ((10.1, 4.1), 0.785), ((10.1, 6.1), 0.575), ((10.1, 8.1), 0.75), ((10.1, 10.1), 0.83), ((10.1, 12.1), 0.81), ((12.1, 0.1), 0.75), ((12.1, 2.1), 0.7), ((12.1, 4.1), 0.735), ((12.1, 6.1), 0.75), ((12.1, 8.1), 0.815), ((12.1, 10.1), 0.81), ((12.1, 12.1), 0.82)]
mrx_beta = [((0.1, 0.1), 0.015), ((0.1, 2.1), 0.0), ((0.1, 4.1), 0.005), ((0.1, 6.1), 0.0), ((0.1, 8.1), 0.0), ((0.1, 10.1), 0.0), ((0.1, 12.1), 0.0), ((2.1, 0.1), 0.005), ((2.1, 2.1), 0.355), ((2.1, 4.1), 0.19), ((2.1, 6.1), 0.06), ((2.1, 8.1), 0.0), ((2.1, 10.1), 0.0), ((2.1, 12.1), 0.0), ((4.1, 0.1), 0.01), ((4.1, 2.1), 0.41), ((4.1, 4.1), 0.56), ((4.1, 6.1), 0.29), ((4.1, 8.1), 0.165), ((4.1, 10.1), 0.03), ((4.1, 12.1), 0.0), ((6.1, 0.1), 0.0), ((6.1, 2.1), 0.175), ((6.1, 4.1), 0.52), ((6.1, 6.1), 0.665), ((6.1, 8.1), 0.505), ((6.1, 10.1), 0.25), ((6.1, 12.1), 0.045), ((8.1, 0.1), 0.0), ((8.1, 2.1), 0.05), ((8.1, 4.1), 0.38), ((8.1, 6.1), 0.705), ((8.1, 8.1), 0.74), ((8.1, 10.1), 0.575), ((8.1, 12.1), 0.37), ((10.1, 0.1), 0.0), ((10.1, 2.1), 0.03), ((10.1, 4.1), 0.235), ((10.1, 6.1), 0.425), ((10.1, 8.1), 0.755), ((10.1, 10.1), 0.725), ((10.1, 12.1), 0.67), ((12.1, 0.1), 0.0), ((12.1, 2.1), 0.02), ((12.1, 4.1), 0.1), ((12.1, 6.1), 0.4), ((12.1, 8.1), 0.665), ((12.1, 10.1), 0.81), ((12.1, 12.1), 0.845)]
test2_beta =  [((0.1, 0.1), 0.21), ((0.1, 2.1), 1.0), ((0.1, 4.1), 1.0), ((0.1, 6.1), 1.0), ((0.1, 8.1), 1.0), ((0.1, 10.1), 1.0), ((0.1, 12.1), 1.0), ((2.1, 0.1), 0.0), ((2.1, 2.1), 0.395), ((2.1, 4.1), 0.81), ((2.1, 6.1), 0.95), ((2.1, 8.1), 1.0), ((2.1, 10.1), 1.0), ((2.1, 12.1), 0.995), ((4.1, 0.1), 0.0), ((4.1, 2.1), 0.08), ((4.1, 4.1), 0.28), ((4.1, 6.1), 0.595), ((4.1, 8.1), 0.875), ((4.1, 10.1), 0.965), ((4.1, 12.1), 0.99), ((6.1, 0.1), 0.0), ((6.1, 2.1), 0.005), ((6.1, 4.1), 0.09), ((6.1, 6.1), 0.275), ((6.1, 8.1), 0.47), ((6.1, 10.1), 0.775), ((6.1, 12.1), 0.91), ((8.1, 0.1), 0.0), ((8.1, 2.1), 0.0), ((8.1, 4.1), 0.015), ((8.1, 6.1), 0.06), ((8.1, 8.1), 0.22), ((8.1, 10.1), 0.455), ((8.1, 12.1), 0.71), ((10.1, 0.1), 0.0), ((10.1, 2.1), 0.0), ((10.1, 4.1), 0.0), ((10.1, 6.1), 0.01), ((10.1, 8.1), 0.075), ((10.1, 10.1), 0.21), ((10.1, 12.1), 0.425), ((12.1, 0.1), 0.0), ((12.1, 2.1), 0.0), ((12.1, 4.1), 0.0), ((12.1, 6.1), 0.0), ((12.1, 8.1), 0.035), ((12.1, 10.1), 0.075), ((12.1, 12.1), 0.21)]
test2_normal = [((0.1, 0.1), 0.265), ((0.1, 2.1), 0.225), ((0.1, 4.1), 0.225), ((0.1, 6.1), 0.28), ((0.1, 8.1), 0.23), ((0.1, 10.1), 0.25), ((0.1, 12.1), 0.195), ((2.1, 0.1), 0.22), ((2.1, 2.1), 0.21), ((2.1, 4.1), 0.245), ((2.1, 6.1), 0.23), ((2.1, 8.1), 0.23), ((2.1, 10.1), 0.19), ((2.1, 12.1), 0.19), ((4.1, 0.1), 0.215), ((4.1, 2.1), 0.2), ((4.1, 4.1), 0.235), ((4.1, 6.1), 0.26), ((4.1, 8.1), 0.24), ((4.1, 10.1), 0.235), ((4.1, 12.1), 0.215), ((6.1, 0.1), 0.195), ((6.1, 2.1), 0.245), ((6.1, 4.1), 0.195), ((6.1, 6.1), 0.22), ((6.1, 8.1), 0.22), ((6.1, 10.1), 0.26), ((6.1, 12.1), 0.165), ((8.1, 0.1), 0.24), ((8.1, 2.1), 0.245), ((8.1, 4.1), 0.17), ((8.1, 6.1), 0.22), ((8.1, 8.1), 0.195), ((8.1, 10.1), 0.18), ((8.1, 12.1), 0.255), ((10.1, 0.1), 0.24), ((10.1, 2.1), 0.175), ((10.1, 4.1), 0.23), ((10.1, 6.1), 0.195), ((10.1, 8.1), 0.18), ((10.1, 10.1), 0.215), ((10.1, 12.1), 0.18), ((12.1, 0.1), 0.225), ((12.1, 2.1), 0.25), ((12.1, 4.1), 0.19), ((12.1, 6.1), 0.235), ((12.1, 8.1), 0.225), ((12.1, 10.1), 0.225), ((12.1, 12.1), 0.225)]
mrx_144_beta = [((0.1, 0.1), 0.0), ((0.1, 1.1), 0.02), ((0.1, 2.1), 0.015), ((0.1, 3.1), 0.0), ((0.1, 4.1), 0.0), ((0.1, 5.1), 0.0), ((0.1, 6.1), 0.0), ((0.1, 7.1), 0.0), ((0.1, 8.1), 0.0), ((0.1, 9.1), 0.0), ((0.1, 10.1), 0.0), ((0.1, 11.1), 0.0), ((0.1, 12.1), 0.0), ((1.1, 0.1), 0.04), ((1.1, 1.1), 0.185), ((1.1, 2.1), 0.22), ((1.1, 3.1), 0.135), ((1.1, 4.1), 0.035), ((1.1, 5.1), 0.005), ((1.1, 6.1), 0.01), ((1.1, 7.1), 0.0), ((1.1, 8.1), 0.0), ((1.1, 9.1), 0.0), ((1.1, 10.1), 0.0), ((1.1, 11.1), 0.0), ((1.1, 12.1), 0.0), ((2.1, 0.1), 0.015), ((2.1, 1.1), 0.305), ((2.1, 2.1), 0.345), ((2.1, 3.1), 0.165), ((2.1, 4.1), 0.165), ((2.1, 5.1), 0.07), ((2.1, 6.1), 0.045), ((2.1, 7.1), 0.01), ((2.1, 8.1), 0.005), ((2.1, 9.1), 0.005), ((2.1, 10.1), 0.0), ((2.1, 11.1), 0.0), ((2.1, 12.1), 0.0), ((3.1, 0.1), 0.005), ((3.1, 1.1), 0.255), ((3.1, 2.1), 0.255), ((3.1, 3.1), 0.395), ((3.1, 4.1), 0.355), ((3.1, 5.1), 0.13), ((3.1, 6.1), 0.13), ((3.1, 7.1), 0.055), ((3.1, 8.1), 0.045), ((3.1, 9.1), 0.025), ((3.1, 10.1), 0.005), ((3.1, 11.1), 0.0), ((3.1, 12.1), 0.0), ((4.1, 0.1), 0.0), ((4.1, 1.1), 0.1), ((4.1, 2.1), 0.385), ((4.1, 3.1), 0.46), ((4.1, 4.1), 0.455), ((4.1, 5.1), 0.435), ((4.1, 6.1), 0.28), ((4.1, 7.1), 0.165), ((4.1, 8.1), 0.115), ((4.1, 9.1), 0.105), ((4.1, 10.1), 0.045), ((4.1, 11.1), 0.015), ((4.1, 12.1), 0.01), ((5.1, 0.1), 0.0), ((5.1, 1.1), 0.06), ((5.1, 2.1), 0.255), ((5.1, 3.1), 0.235), ((5.1, 4.1), 0.615), ((5.1, 5.1), 0.52), ((5.1, 6.1), 0.53), ((5.1, 7.1), 0.45), ((5.1, 8.1), 0.315), ((5.1, 9.1), 0.15), ((5.1, 10.1), 0.11), ((5.1, 11.1), 0.045), ((5.1, 12.1), 0.015), ((6.1, 0.1), 0.0), ((6.1, 1.1), 0.03), ((6.1, 2.1), 0.185), ((6.1, 3.1), 0.435), ((6.1, 4.1), 0.46), ((6.1, 5.1), 0.625), ((6.1, 6.1), 0.615), ((6.1, 7.1), 0.62), ((6.1, 8.1), 0.565), ((6.1, 9.1), 0.38), ((6.1, 10.1), 0.275), ((6.1, 11.1), 0.085), ((6.1, 12.1), 0.08), ((7.1, 0.1), 0.0), ((7.1, 1.1), 0.02), ((7.1, 2.1), 0.135), ((7.1, 3.1), 0.275), ((7.1, 4.1), 0.235), ((7.1, 5.1), 0.64), ((7.1, 6.1), 0.725), ((7.1, 7.1), 0.675), ((7.1, 8.1), 0.615), ((7.1, 9.1), 0.62), ((7.1, 10.1), 0.425), ((7.1, 11.1), 0.43), ((7.1, 12.1), 0.24), ((8.1, 0.1), 0.0), ((8.1, 1.1), 0.0), ((8.1, 2.1), 0.06), ((8.1, 3.1), 0.165), ((8.1, 4.1), 0.41), ((8.1, 5.1), 0.44), ((8.1, 6.1), 0.755), ((8.1, 7.1), 0.78), ((8.1, 8.1), 0.695), ((8.1, 9.1), 0.645), ((8.1, 10.1), 0.575), ((8.1, 11.1), 0.5), ((8.1, 12.1), 0.425), ((9.1, 0.1), 0.0), ((9.1, 1.1), 0.005), ((9.1, 2.1), 0.035), ((9.1, 3.1), 0.14), ((9.1, 4.1), 0.285), ((9.1, 5.1), 0.21), ((9.1, 6.1), 0.595), ((9.1, 7.1), 0.765), ((9.1, 8.1), 0.83), ((9.1, 9.1), 0.805), ((9.1, 10.1), 0.69), ((9.1, 11.1), 0.64), ((9.1, 12.1), 0.525), ((10.1, 0.1), 0.0), ((10.1, 1.1), 0.0), ((10.1, 2.1), 0.015), ((10.1, 3.1), 0.075), ((10.1, 4.1), 0.28), ((10.1, 5.1), 0.385), ((10.1, 6.1), 0.405), ((10.1, 7.1), 0.73), ((10.1, 8.1), 0.815), ((10.1, 9.1), 0.755), ((10.1, 10.1), 0.765), ((10.1, 11.1), 0.765), ((10.1, 12.1), 0.785), ((11.1, 0.1), 0.0), ((11.1, 1.1), 0.0), ((11.1, 2.1), 0.015), ((11.1, 3.1), 0.06), ((11.1, 4.1), 0.2), ((11.1, 5.1), 0.355), ((11.1, 6.1), 0.46), ((11.1, 7.1), 0.625), ((11.1, 8.1), 0.695), ((11.1, 9.1), 0.805), ((11.1, 10.1), 0.87), ((11.1, 11.1), 0.82), ((11.1, 12.1), 0.77), ((12.1, 0.1), 0.0), ((12.1, 1.1), 0.0), ((12.1, 2.1), 0.0), ((12.1, 3.1), 0.025), ((12.1, 4.1), 0.085), ((12.1, 5.1), 0.23), ((12.1, 6.1), 0.485), ((12.1, 7.1), 0.365), ((12.1, 8.1), 0.65), ((12.1, 9.1), 0.785), ((12.1, 10.1), 0.81), ((12.1, 11.1), 0.855), ((12.1, 12.1), 0.88)]
beta_169 = [((0.1, 0.1), 0.2638509316770187), ((0.1, 2.1), 0.7966459627329193), ((0.1, 4.1), 0.815310559006211), ((0.1, 6.1), 0.8161180124223602), ((0.1, 8.1), 0.8156832298136645), ((0.1, 10.1), 0.8156521739130436), ((0.1, 12.1), 0.8158695652173913), ((2.1, 0.1), 0.06664596273291926), ((2.1, 2.1), 0.394192546583851), ((2.1, 4.1), 0.7136024844720497), ((2.1, 6.1), 0.8061490683229812), ((2.1, 8.1), 0.8333850931677019), ((2.1, 10.1), 0.8356521739130435), ((2.1, 12.1), 0.8342546583850929), ((4.1, 0.1), 0.06807453416149069), ((4.1, 2.1), 0.1706521739130436), ((4.1, 4.1), 0.45288819875776404), ((4.1, 6.1), 0.6708074534161487), ((4.1, 8.1), 0.7785093167701863), ((4.1, 10.1), 0.8217701863354038), ((4.1, 12.1), 0.8433850931677022), ((6.1, 0.1), 0.06826086956521739), ((6.1, 2.1), 0.09537267080745343), ((6.1, 4.1), 0.2559937888198759), ((6.1, 6.1), 0.48043478260869554), ((6.1, 8.1), 0.6468012422360251), ((6.1, 10.1), 0.7550310559006214), ((6.1, 12.1), 0.8025155279503107), ((8.1, 0.1), 0.06829192546583851), ((8.1, 2.1), 0.07984472049689444), ((8.1, 4.1), 0.1512422360248447), ((8.1, 6.1), 0.3203416149068323), ((8.1, 8.1), 0.5049068322981366), ((8.1, 10.1), 0.6401242236024844), ((8.1, 12.1), 0.7318633540372671), ((10.1, 0.1), 0.06832298136645963), ((10.1, 2.1), 0.07518633540372674), ((10.1, 4.1), 0.1058695652173913), ((10.1, 6.1), 0.20574534161490687), ((10.1, 8.1), 0.36369565217391314), 
((10.1, 10.1), 0.5195652173913039), ((10.1, 12.1), 0.6309006211180126), ((12.1, 0.1), 0.06832298136645963), ((12.1, 2.1), 0.0729503105590062), ((12.1, 4.1), 0.08580745341614908), ((12.1, 6.1), 0.143944099378882), ((12.1, 8.1), 0.2555279503105591), ((12.1, 10.1), 0.3994720496894409), ((12.1, 12.1), 0.5340683229813666)]
test2_cutby12_differentrealization =  [((0.1, 0.1), 0.195), ((0.1, 2.1), 0.38), ((0.1, 4.1), 0.24), ((0.1, 6.1), 0.23), ((0.1, 8.1), 0.175), ((0.1, 10.1), 0.125), ((0.1, 12.1), 0.125), ((2.1, 0.1), 0.005), ((2.1, 2.1), 0.435), ((2.1, 4.1), 0.83), ((2.1, 6.1), 0.935), ((2.1, 8.1), 0.995), ((2.1, 10.1), 1.0), ((2.1, 12.1), 1.0), ((4.1, 0.1), 0.0), ((4.1, 2.1), 0.035), ((4.1, 4.1), 0.29), ((4.1, 6.1), 0.62), ((4.1, 8.1), 0.835), ((4.1, 10.1), 0.955), ((4.1, 12.1), 0.975), ((6.1, 0.1), 0.0), ((6.1, 2.1), 0.005), ((6.1, 4.1), 0.06), ((6.1, 6.1), 0.28), ((6.1, 8.1), 0.58), ((6.1, 10.1), 0.755), ((6.1, 12.1), 0.91), ((8.1, 0.1), 0.0), ((8.1, 2.1), 0.0), ((8.1, 4.1), 0.005), ((8.1, 6.1), 0.16), ((8.1, 8.1), 0.275), ((8.1, 10.1), 0.495), ((8.1, 12.1), 0.675), ((10.1, 0.1), 0.0), ((10.1, 2.1), 0.0), ((10.1, 4.1), 0.005), ((10.1, 6.1), 0.01), ((10.1, 8.1), 0.075), ((10.1, 10.1), 0.265), ((10.1, 12.1), 0.42), ((12.1, 0.1), 0.0), ((12.1, 2.1), 0.0), ((12.1, 4.1), 0.0), ((12.1, 6.1), 0.005), ((12.1, 8.1), 0.02), ((12.1, 10.1), 0.075), ((12.1, 12.1), 0.225)]
test2_normalrealization_betaalg = [((0.1, 0.1), 0.23), ((0.1, 2.1), 0.2), ((0.1, 4.1), 0.18), ((0.1, 6.1), 0.275), ((0.1, 8.1), 0.19), ((0.1, 10.1), 0.225), ((0.1, 12.1), 0.215), ((2.1, 0.1), 0.25), ((2.1, 2.1), 0.16), ((2.1, 4.1), 0.23), ((2.1, 6.1), 0.175), ((2.1, 8.1), 0.26), ((2.1, 10.1), 0.195), ((2.1, 12.1), 0.19), ((4.1, 0.1), 0.235), ((4.1, 2.1), 0.215), ((4.1, 4.1), 0.2), ((4.1, 6.1), 0.195), ((4.1, 8.1), 0.195), ((4.1, 10.1), 0.185), ((4.1, 12.1), 0.175), ((6.1, 0.1), 0.205), ((6.1, 2.1), 0.225), ((6.1, 4.1), 0.235), ((6.1, 6.1), 0.18), ((6.1, 8.1), 0.155), ((6.1, 10.1), 0.215), ((6.1, 12.1), 0.155), ((8.1, 0.1), 0.245), ((8.1, 2.1), 0.23), ((8.1, 4.1), 0.22), ((8.1, 6.1), 0.195), ((8.1, 8.1), 0.26), ((8.1, 10.1), 0.22), ((8.1, 12.1), 0.23), ((10.1, 0.1), 0.19), ((10.1, 2.1), 0.24), ((10.1, 4.1), 0.18), ((10.1, 6.1), 0.235), ((10.1, 8.1), 0.24), ((10.1, 10.1), 0.22), ((10.1, 12.1), 0.26), ((12.1, 0.1), 0.265), ((12.1, 2.1), 0.225), ((12.1, 4.1), 0.23), ((12.1, 6.1), 0.22), ((12.1, 8.1), 0.205), ((12.1, 10.1), 0.215), ((12.1, 12.1), 0.24)]
test2_betareal_betaalog = [((0.1, 0.1), 0.17), ((0.1, 2.1), 1.0), ((0.1, 4.1), 1.0), ((0.1, 6.1), 1.0), ((0.1, 8.1), 1.0), ((0.1, 10.1), 1.0), ((0.1, 12.1), 1.0), ((2.1, 0.1), 0.0), ((2.1, 2.1), 0.355), ((2.1, 4.1), 0.82), ((2.1, 6.1), 0.93), ((2.1, 8.1), 0.995), ((2.1, 10.1), 1.0), ((2.1, 12.1), 0.995), ((4.1, 0.1), 0.0), ((4.1, 2.1), 0.04), ((4.1, 4.1), 0.365), ((4.1, 6.1), 0.6), ((4.1, 8.1), 0.87), ((4.1, 10.1), 0.965), ((4.1, 12.1), 0.99), ((6.1, 0.1), 0.0), ((6.1, 2.1), 0.005), ((6.1, 4.1), 0.06), ((6.1, 6.1), 0.305), ((6.1, 8.1), 0.465), ((6.1, 10.1), 0.805), ((6.1, 12.1), 0.925), ((8.1, 0.1), 0.0), ((8.1, 2.1), 0.0), ((8.1, 4.1), 0.01), ((8.1, 6.1), 0.09), ((8.1, 8.1), 0.25), ((8.1, 10.1), 0.49), ((8.1, 12.1), 0.67), ((10.1, 0.1), 0.0), ((10.1, 2.1), 0.0), ((10.1, 4.1), 0.0), ((10.1, 6.1), 0.0), ((10.1, 8.1), 0.055), ((10.1, 10.1), 0.24), ((10.1, 12.1), 0.46), ((12.1, 0.1), 0.0), ((12.1, 2.1), 0.0), ((12.1, 4.1), 0.0), ((12.1, 6.1), 0.005), ((12.1, 8.1), 0.015), ((12.1, 10.1), 0.115), ((12.1, 12.1), 0.21)]
test2_cutby12_differentrealization_05 = [((0.1, 0.1), 0.195), ((0.1, 0.6), 0.475), ((0.1, 1.1), 0.375), ((0.1, 1.6), 0.38), ((0.1, 2.1), 0.33), ((0.1, 2.6), 0.275), ((0.1, 3.1), 0.325), ((0.1, 3.6), 0.28), ((0.1, 4.1), 0.21), ((0.1, 4.6), 0.265), ((0.1, 5.1), 0.24), ((0.1, 5.6), 0.225), ((0.1, 6.1), 0.175), ((0.1, 6.6), 0.19), ((0.1, 7.1), 0.12), ((0.1, 7.6), 0.175), ((0.1, 8.1), 0.16), ((0.1, 8.6), 0.14), ((0.1, 9.1), 0.105), ((0.1, 9.6), 0.08), ((0.1, 10.1), 0.13), ((0.1, 10.6), 0.14), ((0.1, 11.1), 0.105), ((0.1, 11.6), 0.095), ((0.1, 12.1), 0.07), ((0.1, 12.6), 0.11), ((0.6, 0.1), 0.05), ((0.6, 0.6), 0.385), ((0.6, 1.1), 0.66), ((0.6, 1.6), 0.77), ((0.6, 2.1), 0.855), ((0.6, 2.6), 0.905), ((0.6, 3.1), 0.915), ((0.6, 3.6), 0.905), ((0.6, 4.1), 0.875), ((0.6, 4.6), 0.865), ((0.6, 5.1), 0.86), ((0.6, 5.6), 0.835), ((0.6, 6.1), 0.81), ((0.6, 6.6), 0.87), ((0.6, 7.1), 0.8), ((0.6, 7.6), 0.715), ((0.6, 8.1), 0.735), ((0.6, 8.6), 0.8), ((0.6, 9.1), 0.73), ((0.6, 9.6), 0.69), ((0.6, 10.1), 0.715), ((0.6, 10.6), 0.69), ((0.6, 11.1), 0.67), ((0.6, 11.6), 0.68), ((0.6, 12.1), 0.63), ((0.6, 12.6), 0.58), ((1.1, 0.1), 0.025), ((1.1, 0.6), 0.205), ((1.1, 1.1), 0.4), ((1.1, 1.6), 0.565), ((1.1, 2.1), 0.735), ((1.1, 2.6), 0.765), ((1.1, 3.1), 0.865), ((1.1, 3.6), 0.91), ((1.1, 4.1), 0.955), ((1.1, 4.6), 0.98), ((1.1, 5.1), 0.97), ((1.1, 5.6), 0.97), ((1.1, 6.1), 0.955), ((1.1, 6.6), 0.975), ((1.1, 7.1), 0.96), ((1.1, 7.6), 0.945), ((1.1, 8.1), 0.96), ((1.1, 8.6), 0.955), ((1.1, 9.1), 0.96), ((1.1, 9.6), 0.94), ((1.1, 10.1), 0.92), ((1.1, 10.6), 0.895), ((1.1, 11.1), 0.895), ((1.1, 11.6), 0.92), ((1.1, 12.1), 0.925), ((1.1, 12.6), 0.91), ((1.6, 0.1), 0.0), ((1.6, 0.6), 0.06), ((1.6, 1.1), 0.165), ((1.6, 1.6), 0.405), ((1.6, 2.1), 0.555), ((1.6, 2.6), 0.66), ((1.6, 3.1), 0.75), ((1.6, 3.6), 0.84), ((1.6, 4.1), 0.87), ((1.6, 4.6), 0.925), ((1.6, 5.1), 0.96), ((1.6, 5.6), 0.955), ((1.6, 6.1), 0.98), ((1.6, 6.6), 0.995), ((1.6, 7.1), 0.995), ((1.6, 7.6), 0.995), ((1.6, 8.1), 1.0), ((1.6, 8.6), 0.99), ((1.6, 9.1), 0.995), ((1.6, 9.6), 0.99), ((1.6, 10.1), 0.99), ((1.6, 10.6), 0.99), ((1.6, 11.1), 0.985), ((1.6, 11.6), 0.98), ((1.6, 12.1), 0.965), ((1.6, 12.6), 0.985), ((2.1, 0.1), 0.0), ((2.1, 0.6), 0.03), ((2.1, 1.1), 0.13), ((2.1, 1.6), 0.21), ((2.1, 2.1), 0.4), ((2.1, 2.6), 0.485), ((2.1, 3.1), 0.635), ((2.1, 3.6), 0.695), ((2.1, 4.1), 0.83), ((2.1, 4.6), 0.925), ((2.1, 5.1), 0.925), ((2.1, 5.6), 0.965), ((2.1, 6.1), 0.95), ((2.1, 6.6), 0.97), ((2.1, 7.1), 0.98), ((2.1, 7.6), 1.0), ((2.1, 8.1), 0.995), ((2.1, 8.6), 0.995), ((2.1, 9.1), 0.99), ((2.1, 9.6), 0.995), ((2.1, 10.1), 1.0), ((2.1, 10.6), 1.0), ((2.1, 11.1), 1.0), ((2.1, 11.6), 1.0), ((2.1, 12.1), 0.98), ((2.1, 12.6), 1.0), ((2.6, 0.1), 0.0), ((2.6, 0.6), 0.015), ((2.6, 1.1), 0.035), ((2.6, 1.6), 0.14), ((2.6, 2.1), 0.185), ((2.6, 2.6), 0.375), ((2.6, 3.1), 0.45), ((2.6, 3.6), 0.58), ((2.6, 4.1), 0.65), ((2.6, 4.6), 0.77), ((2.6, 5.1), 0.8), ((2.6, 5.6), 0.815), ((2.6, 6.1), 0.905), ((2.6, 6.6), 0.96), ((2.6, 7.1), 0.955), ((2.6, 7.6), 0.96), ((2.6, 8.1), 0.98), ((2.6, 8.6), 0.985), ((2.6, 9.1), 0.995), ((2.6, 9.6), 0.995), ((2.6, 10.1), 0.99), ((2.6, 10.6), 1.0), ((2.6, 11.1), 1.0), ((2.6, 11.6), 1.0), ((2.6, 12.1), 1.0), ((2.6, 12.6), 1.0), ((3.1, 0.1), 0.0), ((3.1, 0.6), 0.015), ((3.1, 1.1), 0.035), ((3.1, 1.6), 0.065), ((3.1, 2.1), 0.18), ((3.1, 2.6), 0.275), ((3.1, 3.1), 0.385), ((3.1, 3.6), 0.445), ((3.1, 4.1), 0.525), ((3.1, 4.6), 0.625), ((3.1, 5.1), 0.725), ((3.1, 5.6), 0.8), ((3.1, 6.1), 0.83), ((3.1, 6.6), 0.84), ((3.1, 7.1), 0.91), ((3.1, 7.6), 0.955), ((3.1, 8.1), 0.955), ((3.1, 8.6), 0.96), ((3.1, 9.1), 0.975), ((3.1, 9.6), 1.0), ((3.1, 10.1), 1.0), ((3.1, 10.6), 0.99), ((3.1, 11.1), 0.995), ((3.1, 11.6), 1.0), ((3.1, 12.1), 1.0), ((3.1, 12.6), 0.995), ((3.6, 0.1), 0.0), ((3.6, 0.6), 0.0), ((3.6, 1.1), 0.015), ((3.6, 1.6), 0.015), ((3.6, 2.1), 0.105), ((3.6, 2.6), 0.15), ((3.6, 3.1), 0.28), ((3.6, 3.6), 0.305), ((3.6, 4.1), 0.445), ((3.6, 4.6), 0.51), ((3.6, 5.1), 0.63), ((3.6, 5.6), 0.69), ((3.6, 6.1), 0.755), ((3.6, 6.6), 0.805), ((3.6, 7.1), 0.89), ((3.6, 7.6), 0.89), ((3.6, 8.1), 0.935), ((3.6, 8.6), 0.94), ((3.6, 9.1), 0.95), ((3.6, 9.6), 0.965), ((3.6, 10.1), 0.955), ((3.6, 10.6), 0.98), ((3.6, 11.1), 0.975), ((3.6, 11.6), 0.985), ((3.6, 12.1), 0.99), ((3.6, 12.6), 1.0), ((4.1, 0.1), 0.0), ((4.1, 0.6), 0.0), ((4.1, 1.1), 0.005), ((4.1, 1.6), 0.015), ((4.1, 2.1), 0.065), ((4.1, 2.6), 0.075), ((4.1, 3.1), 0.08), ((4.1, 3.6), 0.29), ((4.1, 4.1), 0.28), ((4.1, 4.6), 0.365), ((4.1, 5.1), 0.53), ((4.1, 5.6), 0.575), ((4.1, 6.1), 0.685), ((4.1, 6.6), 0.735), ((4.1, 7.1), 0.78), ((4.1, 7.6), 0.82), ((4.1, 8.1), 0.88), ((4.1, 8.6), 0.915), ((4.1, 9.1), 0.915), ((4.1, 9.6), 0.925), ((4.1, 10.1), 0.97), ((4.1, 10.6), 0.985), ((4.1, 11.1), 0.965), ((4.1, 11.6), 0.98), ((4.1, 12.1), 0.975), ((4.1, 12.6), 0.995), ((4.6, 0.1), 0.0), ((4.6, 0.6), 0.0), ((4.6, 1.1), 0.0), ((4.6, 1.6), 0.01), ((4.6, 2.1), 0.025), ((4.6, 2.6), 0.085), ((4.6, 3.1), 0.145), ((4.6, 3.6), 0.18), ((4.6, 4.1), 0.205), ((4.6, 4.6), 0.26), ((4.6, 5.1), 0.35), ((4.6, 5.6), 0.465), ((4.6, 6.1), 0.505), ((4.6, 6.6), 0.645), ((4.6, 7.1), 0.695), ((4.6, 7.6), 0.75), ((4.6, 8.1), 0.78), ((4.6, 8.6), 0.865), ((4.6, 9.1), 0.885), ((4.6, 9.6), 0.925), ((4.6, 10.1), 0.94), ((4.6, 10.6), 0.95), ((4.6, 11.1), 0.975), ((4.6, 11.6), 0.97), ((4.6, 12.1), 0.98), ((4.6, 12.6), 0.985), ((5.1, 0.1), 0.0), ((5.1, 0.6), 0.0), ((5.1, 1.1), 0.0), ((5.1, 1.6), 0.005), ((5.1, 2.1), 0.015), ((5.1, 2.6), 0.02), ((5.1, 3.1), 0.06), ((5.1, 3.6), 0.12), ((5.1, 4.1), 0.135), ((5.1, 4.6), 0.21), ((5.1, 5.1), 0.29), ((5.1, 5.6), 0.34), ((5.1, 6.1), 0.425), ((5.1, 6.6), 0.51), ((5.1, 7.1), 0.65), ((5.1, 7.6), 0.72), ((5.1, 8.1), 0.74), ((5.1, 8.6), 0.805), ((5.1, 9.1), 0.83), ((5.1, 9.6), 0.795), ((5.1, 10.1), 0.915), ((5.1, 10.6), 0.905), ((5.1, 11.1), 0.94), ((5.1, 11.6), 0.95), ((5.1, 12.1), 0.97), ((5.1, 12.6), 0.965), ((5.6, 0.1), 0.0), ((5.6, 0.6), 0.0), ((5.6, 1.1), 0.0), ((5.6, 1.6), 0.005), ((5.6, 2.1), 0.015), ((5.6, 2.6), 0.025), ((5.6, 3.1), 0.05), ((5.6, 3.6), 0.08), ((5.6, 4.1), 0.115), ((5.6, 4.6), 0.125), ((5.6, 5.1), 0.18), ((5.6, 5.6), 0.265), ((5.6, 6.1), 0.375), ((5.6, 6.6), 0.415), ((5.6, 7.1), 0.535), ((5.6, 7.6), 0.595), ((5.6, 8.1), 0.715), ((5.6, 8.6), 0.725), ((5.6, 9.1), 0.765), ((5.6, 9.6), 0.795), ((5.6, 10.1), 0.815), ((5.6, 10.6), 0.91), ((5.6, 11.1), 0.905), ((5.6, 11.6), 0.95), ((5.6, 12.1), 0.955), ((5.6, 12.6), 0.985), ((6.1, 0.1), 0.0), ((6.1, 0.6), 0.0), ((6.1, 1.1), 0.0), ((6.1, 1.6), 0.0), ((6.1, 2.1), 0.01), ((6.1, 2.6), 0.02), ((6.1, 3.1), 0.035), ((6.1, 3.6), 0.055), ((6.1, 4.1), 0.105), ((6.1, 4.6), 0.14), ((6.1, 5.1), 0.155), ((6.1, 5.6), 0.17), ((6.1, 6.1), 0.31), ((6.1, 6.6), 0.34), ((6.1, 7.1), 0.455), ((6.1, 7.6), 0.545), ((6.1, 8.1), 0.54), ((6.1, 8.6), 0.685), ((6.1, 9.1), 0.675), ((6.1, 9.6), 0.765), ((6.1, 10.1), 0.79), ((6.1, 10.6), 0.805), ((6.1, 11.1), 0.875), ((6.1, 11.6), 0.895), ((6.1, 12.1), 0.905), ((6.1, 12.6), 0.94), ((6.6, 0.1), 0.0), ((6.6, 0.6), 0.0), ((6.6, 1.1), 0.0), ((6.6, 1.6), 0.0), ((6.6, 2.1), 0.0), ((6.6, 2.6), 0.0), ((6.6, 3.1), 0.03), ((6.6, 3.6), 0.05), ((6.6, 4.1), 0.055), ((6.6, 4.6), 0.09), ((6.6, 5.1), 0.135), ((6.6, 5.6), 0.16), ((6.6, 6.1), 0.165), ((6.6, 6.6), 0.32), ((6.6, 7.1), 0.24), ((6.6, 7.6), 0.405), ((6.6, 8.1), 0.52), ((6.6, 8.6), 0.525), ((6.6, 9.1), 0.62), ((6.6, 9.6), 0.64), ((6.6, 10.1), 0.73), ((6.6, 10.6), 0.755), ((6.6, 11.1), 0.83), ((6.6, 11.6), 0.9), ((6.6, 12.1), 0.82), ((6.6, 12.6), 0.91), ((7.1, 0.1), 0.0), ((7.1, 0.6), 0.0), ((7.1, 1.1), 0.0), ((7.1, 1.6), 0.0), ((7.1, 2.1), 0.0), ((7.1, 2.6), 0.005), ((7.1, 3.1), 0.0), ((7.1, 3.6), 0.025), ((7.1, 4.1), 0.03), ((7.1, 4.6), 0.1), ((7.1, 5.1), 0.065), ((7.1, 5.6), 0.15), ((7.1, 6.1), 0.195), ((7.1, 6.6), 0.165), ((7.1, 7.1), 0.315), ((7.1, 7.6), 0.33), ((7.1, 8.1), 0.375), ((7.1, 8.6), 0.455), ((7.1, 9.1), 0.58), ((7.1, 9.6), 0.55), ((7.1, 10.1), 0.655), ((7.1, 10.6), 0.74), ((7.1, 11.1), 0.71), ((7.1, 11.6), 0.81), ((7.1, 12.1), 0.765), ((7.1, 12.6), 0.875), ((7.6, 0.1), 0.0), ((7.6, 0.6), 0.0), ((7.6, 1.1), 0.0), ((7.6, 1.6), 0.0), ((7.6, 2.1), 0.0), ((7.6, 2.6), 0.005), ((7.6, 3.1), 0.0), ((7.6, 3.6), 0.01), ((7.6, 4.1), 0.005), ((7.6, 4.6), 0.04), ((7.6, 5.1), 0.06), ((7.6, 5.6), 0.105), ((7.6, 6.1), 0.11), ((7.6, 6.6), 0.17), ((7.6, 7.1), 0.225), ((7.6, 7.6), 0.24), ((7.6, 8.1), 0.345), ((7.6, 8.6), 0.365), ((7.6, 9.1), 0.455), ((7.6, 9.6), 0.525), ((7.6, 10.1), 0.595), ((7.6, 10.6), 0.675), ((7.6, 11.1), 0.7), ((7.6, 11.6), 0.735), ((7.6, 12.1), 0.78), ((7.6, 12.6), 0.81), ((8.1, 0.1), 0.0), ((8.1, 0.6), 0.0), ((8.1, 1.1), 0.0), ((8.1, 1.6), 0.0), ((8.1, 2.1), 0.0), ((8.1, 2.6), 0.0), ((8.1, 3.1), 0.0), ((8.1, 3.6), 0.0), ((8.1, 4.1), 0.02), ((8.1, 4.6), 0.02), ((8.1, 5.1), 0.045), ((8.1, 5.6), 0.06), ((8.1, 6.1), 0.105), ((8.1, 6.6), 0.125), ((8.1, 7.1), 0.135), ((8.1, 7.6), 0.22), ((8.1, 8.1), 0.23), ((8.1, 8.6), 0.305), ((8.1, 9.1), 0.355), ((8.1, 9.6), 0.375), ((8.1, 10.1), 0.475), ((8.1, 10.6), 0.575), ((8.1, 11.1), 0.645), ((8.1, 11.6), 0.65), ((8.1, 12.1), 0.7), ((8.1, 12.6), 0.73), ((8.6, 0.1), 0.0), ((8.6, 0.6), 0.0), ((8.6, 1.1), 0.0), ((8.6, 1.6), 0.0), ((8.6, 2.1), 0.0), ((8.6, 2.6), 0.0), ((8.6, 3.1), 0.0), ((8.6, 3.6), 0.005), ((8.6, 4.1), 0.015), ((8.6, 4.6), 0.01), ((8.6, 5.1), 0.02), ((8.6, 5.6), 0.05), ((8.6, 6.1), 0.055), ((8.6, 6.6), 0.095), ((8.6, 7.1), 0.09), ((8.6, 7.6), 0.13), ((8.6, 8.1), 0.245), ((8.6, 8.6), 0.2), ((8.6, 9.1), 0.295), ((8.6, 9.6), 0.36), ((8.6, 10.1), 0.415), ((8.6, 10.6), 0.48), ((8.6, 11.1), 0.575), ((8.6, 11.6), 0.59), ((8.6, 12.1), 0.6), ((8.6, 12.6), 0.685), ((9.1, 0.1), 0.0), ((9.1, 0.6), 0.0), ((9.1, 1.1), 0.0), ((9.1, 1.6), 0.0), ((9.1, 2.1), 0.005), ((9.1, 2.6), 0.0), ((9.1, 3.1), 0.0), ((9.1, 3.6), 0.0), ((9.1, 4.1), 0.0), ((9.1, 4.6), 0.005), ((9.1, 5.1), 0.02), ((9.1, 5.6), 0.02), ((9.1, 6.1), 0.05), ((9.1, 6.6), 0.07), ((9.1, 7.1), 0.12), ((9.1, 7.6), 0.125), ((9.1, 8.1), 0.14), ((9.1, 8.6), 0.19), ((9.1, 9.1), 0.205), ((9.1, 9.6), 0.29), ((9.1, 10.1), 0.285), ((9.1, 10.6), 0.435), ((9.1, 11.1), 0.475), ((9.1, 11.6), 0.545), ((9.1, 12.1), 0.51), ((9.1, 12.6), 0.58), ((9.6, 0.1), 0.0), ((9.6, 0.6), 0.0), ((9.6, 1.1), 0.0), ((9.6, 1.6), 0.0), ((9.6, 2.1), 0.0), ((9.6, 2.6), 0.0), ((9.6, 3.1), 0.0), ((9.6, 3.6), 0.0), ((9.6, 4.1), 0.01), ((9.6, 4.6), 0.005), ((9.6, 5.1), 0.005), ((9.6, 5.6), 0.02), ((9.6, 6.1), 0.02), ((9.6, 6.6), 0.06), ((9.6, 7.1), 0.055), ((9.6, 7.6), 0.1), ((9.6, 8.1), 0.08), ((9.6, 8.6), 0.12), ((9.6, 9.1), 0.23), ((9.6, 9.6), 0.195), ((9.6, 10.1), 0.285), ((9.6, 10.6), 0.305), ((9.6, 11.1), 0.35), ((9.6, 11.6), 0.435), ((9.6, 12.1), 0.515), ((9.6, 12.6), 0.555), ((10.1, 0.1), 0.0), ((10.1, 0.6), 0.0), ((10.1, 1.1), 0.0), ((10.1, 1.6), 0.0), ((10.1, 2.1), 0.0), ((10.1, 2.6), 0.0), ((10.1, 3.1), 0.0), ((10.1, 3.6), 0.0), ((10.1, 4.1), 0.0), ((10.1, 4.6), 0.0), ((10.1, 5.1), 0.005), ((10.1, 5.6), 0.01), ((10.1, 6.1), 0.01), ((10.1, 6.6), 0.035), ((10.1, 7.1), 0.075), ((10.1, 7.6), 0.065), ((10.1, 8.1), 0.135), ((10.1, 8.6), 0.135), ((10.1, 9.1), 0.19), ((10.1, 9.6), 0.19), ((10.1, 10.1), 0.195), ((10.1, 10.6), 0.345), ((10.1, 11.1), 0.335), ((10.1, 11.6), 0.395), ((10.1, 12.1), 0.465), ((10.1, 12.6), 0.47), ((10.6, 0.1), 0.0), ((10.6, 0.6), 0.0), ((10.6, 1.1), 0.0), ((10.6, 1.6), 0.0), ((10.6, 2.1), 0.0), ((10.6, 2.6), 0.0), ((10.6, 3.1), 0.0), ((10.6, 3.6), 0.0), ((10.6, 4.1), 0.0), ((10.6, 4.6), 0.0), ((10.6, 5.1), 0.0), ((10.6, 5.6), 0.005), ((10.6, 6.1), 0.015), ((10.6, 6.6), 0.015), ((10.6, 7.1), 0.03), ((10.6, 7.6), 0.03), ((10.6, 8.1), 0.07), ((10.6, 8.6), 0.04), ((10.6, 9.1), 0.12), ((10.6, 9.6), 0.13), ((10.6, 10.1), 0.155), ((10.6, 10.6), 0.235), ((10.6, 11.1), 0.225), ((10.6, 11.6), 0.315), ((10.6, 12.1), 0.39), ((10.6, 12.6), 0.375), ((11.1, 0.1), 0.0), ((11.1, 0.6), 0.0), ((11.1, 1.1), 0.0), ((11.1, 1.6), 0.0), ((11.1, 2.1), 0.0), ((11.1, 2.6), 0.0), ((11.1, 3.1), 0.005), ((11.1, 3.6), 0.0), ((11.1, 4.1), 0.0), ((11.1, 4.6), 0.0), ((11.1, 5.1), 0.0), ((11.1, 5.6), 0.005), ((11.1, 6.1), 0.02), ((11.1, 6.6), 0.02), ((11.1, 7.1), 0.01), ((11.1, 7.6), 0.025), ((11.1, 8.1), 0.035), ((11.1, 8.6), 0.105), ((11.1, 9.1), 0.1), ((11.1, 9.6), 0.11), ((11.1, 10.1), 0.13), ((11.1, 10.6), 0.165), ((11.1, 11.1), 0.265), ((11.1, 11.6), 0.26), ((11.1, 12.1), 0.305), ((11.1, 12.6), 0.36), ((11.6, 0.1), 0.0), ((11.6, 0.6), 0.0), ((11.6, 1.1), 0.0), ((11.6, 1.6), 0.0), ((11.6, 2.1), 0.0), ((11.6, 2.6), 0.0), ((11.6, 3.1), 0.0), ((11.6, 3.6), 0.0), ((11.6, 4.1), 0.0), ((11.6, 4.6), 0.0), ((11.6, 5.1), 0.005), ((11.6, 5.6), 0.005), ((11.6, 6.1), 0.0), ((11.6, 6.6), 0.02), ((11.6, 7.1), 0.02), ((11.6, 7.6), 0.01), ((11.6, 8.1), 0.04), ((11.6, 8.6), 0.065), ((11.6, 9.1), 0.075), ((11.6, 9.6), 0.1), ((11.6, 10.1), 0.09), ((11.6, 10.6), 0.14), ((11.6, 11.1), 0.21), ((11.6, 11.6), 0.215), ((11.6, 12.1), 0.295), ((11.6, 12.6), 0.365), ((12.1, 0.1), 0.0), ((12.1, 0.6), 0.0), ((12.1, 1.1), 0.0), ((12.1, 1.6), 0.0), ((12.1, 2.1), 0.0), ((12.1, 2.6), 0.0), ((12.1, 3.1), 0.0), ((12.1, 3.6), 0.0), ((12.1, 4.1), 0.0), ((12.1, 4.6), 0.0), ((12.1, 5.1), 0.0), ((12.1, 5.6), 0.005), ((12.1, 6.1), 0.005), ((12.1, 6.6), 0.0), ((12.1, 7.1), 0.02), ((12.1, 7.6), 0.0), ((12.1, 8.1), 0.005), ((12.1, 8.6), 0.045), ((12.1, 9.1), 0.045), ((12.1, 9.6), 0.055), ((12.1, 10.1), 0.085), ((12.1, 10.6), 0.13), ((12.1, 11.1), 0.145), ((12.1, 11.6), 0.135), ((12.1, 12.1), 0.245), ((12.1, 12.6), 0.25), ((12.6, 0.1), 0.0), ((12.6, 0.6), 0.0), ((12.6, 1.1), 0.0), ((12.6, 1.6), 0.0), ((12.6, 2.1), 0.0), ((12.6, 2.6), 0.0), ((12.6, 3.1), 0.0), ((12.6, 3.6), 0.0), ((12.6, 4.1), 0.0), ((12.6, 4.6), 0.0), ((12.6, 5.1), 0.005), ((12.6, 5.6), 0.0), ((12.6, 6.1), 0.0), ((12.6, 6.6), 0.01), ((12.6, 7.1), 0.005), ((12.6, 7.6), 0.0), ((12.6, 8.1), 0.02), ((12.6, 8.6), 0.03), ((12.6, 9.1), 0.03), ((12.6, 9.6), 0.045), ((12.6, 10.1), 0.08), ((12.6, 10.6), 0.075), ((12.6, 11.1), 0.13), ((12.6, 11.6), 0.12), ((12.6, 12.1), 0.17), ((12.6, 12.6), 0.21)]

row_number = 0.1
total_array = []
row = []

for item in mrx_144_beta: 
    if item[0][0] != row_number:
        row_number = item[0][0]
        total_array.append(row)
        row = []
        row.append(item[1])
    else:
        row.append(item[1])
total_array.append(row)

print(total_array)
print(np.array(total_array))

df = pd.DataFrame(np.array(total_array), columns = x_axis, index = y_axis)
sns.set()

ax = sns.heatmap(df, vmin=0, vmax=1, annot = True)
plt.title("test2 Same Realization and Algorithm Distributions")
plt.xlabel("beta")
plt.ylabel("alpha")
plt.show()
